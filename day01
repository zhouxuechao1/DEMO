# check = input()
# num = int(input())
# list1 = []
# for i in range(num):
#     x = input()
#     list1.append(x)
# indices = []
# start = 0
# while 1:
#     try:
#         x = list1.index(check,start)
#         indices.append(x)
#         start = x+1
#     except:
#         break
# print(indices)

# 传递字典
# def chuan_can01(**a):
#     print(a.keys())
#     print(a.values())
#
# chuan_can01(a=1, b=2, c=3)
#
# def chuan_can02(*a):
#     print(a[0])
#     print(a[1])
#     print(a[2])
#
# chuan_can02(1,2,3)
from typing import Callable, Any
# lambda表达式，自带return
# y: Callable[[Any, Any], Any] = lambda x, y: x * y
# print(y(2, 3))
#
# a: Callable[[Any, Any], Any] = lambda b, c: b+c
# print(a(2, 3))

# # 列表推导式
# list_01 = [x*y for x in range(1, 4) for y in range(1, 4)]
# print(list_01)
#
#
# list_02 = []
# for i in range(1, 4):
#     for j in range(1, 4):
#         v = i*j
#         list_02.append(v)
# print(list_02)

# # 集合
# a = {1, 2, 4, 6}
# b = {1, 3, 4, 5}
# print(a.union(b))  # 并集
# print(a.intersection(b))  # 交集
# c = a.difference(b)
#
# print(a.difference_update(c))

# list_03 = [4, 1, 3, 7, 5, 6, 2]
# list_03.sort(reverse=True)
# print(list_03)
# # 格式化输出 % ，str.format（）
# print("%.3f" % 3.1416556)
# # 字典
# abc = {'name': 'jak', 'age': 12}
# print("lili的名字是{name}年龄是{age}".format(**abc))
# # 列表
# lisa = ['李旻', 25, '湖北']
# print('他叫{0}，今年{1}，来自{2}'.format(*lisa))

with open('word.txt', 'r+') as f:

    for line in f:
        print(line)